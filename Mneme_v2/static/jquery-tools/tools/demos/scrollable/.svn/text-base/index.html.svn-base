
<%-- :mode=jsp: --%>
<%@ include file="../header.jsf" %>

<p>
	Here is a scrollable with 3 items in total and each of those items contains 5 images:
</p>

<div style="margin:20px -15px">
<%@ include file="index.htm" %>
</div>


<p class="less">
	<small>
		You can scroll through these elements by clicking on the arrow buttons or using the left and right arrow keys from your keyboard.
	</small>
</ol>

<p>
	For this example we can only scroll by clicking on the arrow buttons or using the left and right arrow keys from your keyboard because we are aiming for a minimal setup. It's important to understand how this example works because it teaches you the theory behind HTML scrolling. Understanding this helps you to build any kind of scrolling you want. We are using a very primitive look and feel for most of these demos because we are focusing only on their functionality and not their visual style. On your own pages you can use standard HTML/CSS techniques to style your scrollables.
</p>

<h3>HTML code</h3>

<p>
	This is how you lay out your scrollables. You must have a root element for the scrollable and inside that another wrapper element for the items. The items can contain anything you want including images, Flash, HTML text and forms. Items can have any amount of child elements and they can be any size. Here we have just simple thumbnail images from <samp>www.flickr.com</samp>:
</p>

<pii:code lang="html">${html}</pii:code>

<h4>Next/prev buttons</h4>

<p>
	The scrollable tool looks for elements whose CSS class name is <samp>prev</samp> and <samp>next</samp> and automatically binds the seeking action to them. You can specify other names for the CSS class names to avoid any clashes with your existing CSS.
</p>


<h3>CSS code</h3>

<p>
	Our example is using two CSS files: <a href="${jqt}/css/scrollable-horizontal.css">scrollable-horizontal.css</a> for basic setup for the scrollable and <a href="${jqt}/css/scrollable-buttons.css">scrollable-buttons.css</a> for the next/prev action buttons.
</p>

<p>
	Here are the minimal CSS settings for enabling a horizontal scrollable. Except for the <samp>width</samp> property these settings don't have any impact on the appearance. You will have probably have to tweak your <samp>width</samp> property yourself to have as many items visible at once as you want.
</p>

<pii:code lang="css">
/*
	root element for the scrollable.
	when scrolling occurs this element stays still.
*/
.scrollable {

	/* required settings */
	position:relative;
	overflow:hidden;
	width: 660px;
	height:90px;
}

/*
	root element for scrollable items. Must be absolutely positioned
	and it should have a extremely large width to accommodate scrollable items.
	it's enough that you set width and height for the root element and
	not for this element.
*/
.scrollable .items {
	/* this cannot be too large */
	width:20000em;
	position:absolute;
}

/*
	a single item. must be floated in horizontal scrolling.
	typically, this element is the one that *you* will style
	the most.
*/
.items div {
	float:left;
}
</pii:code>

<p>
	CSS coding is actually the hardest part of making scrollables and it's recommended that you have more than just a basic understanding of it.
</p>

<h3>JavaScript setup</h3>

<p>
	This is the easy part. Just select the elements from the page that will be made scrollable. This is achieved with a <a href="http://api.jquery.com/category/selectors/" class="external">jQuery selector</a> followed by the <samp>scrollable</samp> constructor. This constructor accepts a configuration object as the first argument but in this minimal setup we can stick with the default settings.
</p>

<pii:code>${js}</pii:code>

<div class="box petrol">
	Show this demo as a <a href="index.htm">standalone page</a>
</div>

<p>
	<a href="${jqt}/credits.html" id="credits">Photo credits &raquo;</a>
</p>
