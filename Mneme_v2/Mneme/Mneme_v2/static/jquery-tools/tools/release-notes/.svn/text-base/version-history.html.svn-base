
<style>
div#overlay {
	background-image:none;
	padding:0px;
	width:100%;
}


div.pane h2 {
	margin-top:15px;
	font-size:30px;
	text-transform:uppercase;
	font-weight:bold;
}

ul.tabs {
	position:relative;
	top:-47px;
	margin-bottom:-35px;
}
</style>

<script>
$(function() {
	$("ul.tabs").tabs("div.pane");
});
</script>

<h1 id="hero">
	<span></span>
	Version History
	<em>A full list of bug fixes and new features</strong></em>
</h1>


<ul class="tabs">
	<li><a href="#tools" class="s">all tools</a></li>
	<li><a class="s" href="#scrollable">scrollable</a></li>
	<li><a class="s" href="#overlay">overlay</a></li>
	<li><a class="s" href="#expose">expose</a></li>
	<li><a class="s" href="#tabs">tabs</a></li>
	<li><a class="s" href="#tooltip">tooltip</a></li>
	<li><a href="#flashembed">flashembed</a></li>
</ul>

<!--{{{ all tools -->

<a name="tools"></a>
<div class="pane" id="tools">

	<h3 class="first"><em>October 08, 2009</em> Version 1.1.2</h3>

	<p>
		The event object has been extended to have a lot more information. Here is an example:
	</p>

	<pii:code>
	$("#scroll").scrollable().onSeek(function(event, index) {

		// mouse position at the time when the event was fired
		var x = event.pageX;
		var y = event.pageY;

		// whether CTRL, ALT, SHIFT or ESC was being pressed
		var alt = event.altKey,
			ctrl = event.ctrlKey,
			shift = event.shiftMey,
			esc = event.metaKey;


		// the original triggering element
		var element = e.originalTarget || e.srcElement;

	});
	</pii:code>


	<h3><em>June 07, 2009</em>: Version 1.1.1.</h3>

	<p>
		In jQuery Tools version 1.1.1. the event processing is standardized according to the <a href="http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-flow-cancelation" class="external">W3C standards</a>. This is good news for advanced scripters - the users who want to extend the default behaviour of the tools and for the jQuery Tools plugin developers. Here is what you can do with it:
	</p>

	<ol>
		<li>Add and <em>remove</em> your existing callback functions.</li>
		<li>Specify a name for your callbacks and later remove only those named callbacks.</li>
		<li>Specify a single callback for multiple event types.</li>
		<li>
			If you have multiple callbacks of the same type you can prevent the rest of the callbacks from being executed.
		</li>
	</ol>

	<p>
		You can read the details of the new event model in the <a href="${jqt}/documentation/index.html#callbacks">User's Manual</a>.
	</p>


	<h3><em> September 11 / 2009</em>: Version 1.1.0.</h3>

	<p>
		A new global variable <samp>$.tools</samp> which has following kind of tree structure:
	</p>

	<p style="margin:20px 0">
		<img src="img/global-config.gif" alt="Global configuration" />
	</p>

	<p>
		This shows the available tools, effects, plugins and their versions and <a href="${jqt}/documentation/index.html#global_configuration">global configurations</a>
	</p>

	<h3><em> June 03 / 2009</em> Version 1.0.0. (Initial release)</h3>

	<p>
		Former well known jQuery plugins:
	</p>

	<ol>
		<li>jquery.scrollable</li>
		<li>jquery.overlay</li>
		<li>jquery.expose</li>
		<li>flashembed</li>
	</ol>

	<p>
		Are now packaged into single library called <strong>jquery.tools</strong> with a new prefix and version number as follows:
	</p>

	<ol>
		<li>tools.scrollable</li>
		<li>tools.overlay</li>
		<li>tools.expose</li>
		<li>tools.flashembed</li>
	</ol>

	<p>
		The library also contains the following new tools:
	</p>

	<ol>
		<li>tools.tabs</li>
		<li>tools.tooltip</li>
	</ol>

	<p>
		making the library complete.
	</p>

	<a name="common"></a>
	<h4>Common changes to all tools</h4>

	<p>
		Here is a list of the changes that are common for all tools:
	</p>

	<ul>
		<li>
			All tools are now minified with Yahoo's <a href="http://developer.yahoo.com/yui/compressor/" class="external">YUICompressor</a> which is designed to be 100% safe and yield a higher compression ratio than most other tools. <a href="http://www.jslint.com/" class="external">JSLint</a> is still used for verifying the code quality.
		</li>
		<li>
			<strong>plugin architecture</strong> - which essentially means that you are allowed to assign multiple callback methods for same event. Look for more information here about <a href="${jqt}/documentation/index.html#plugins">writing plugins</a>.
		</li>
		<li>
			The <samp>getVersion</samp> method has been removed and now you get access to the individual tool version through the global <samp>$.tools.version</samp> object. For example, <samp>$.tools.version.tabs</samp>, will return the version for the tabs tool.
		</li>
		<li>
			The <samp>alert</samp> configuration variable has been removed. Alert boxes are no longer used when an exception is thrown in a custom callback method. Errors are printed in the browser's JavaScript console or Firebug.
		</li>
		<li>
			A new <samp>api</samp> flag that you use to return the tools programming API when the tool is constructed. Look for more information here about <a href="${jqt}/documentation/index.html#api">accessing the API</a>.
		</li>
	</ul>
</div>

<!--}}}-->


<!--{{{ scrollable -->

<a name="scrollable"></a>
<div class="pane" id="scrollable">

	<h3 class="first">1.1.2. <em>October 08 / 2009</em></h3>

	<ul>
		<li>
			new <samp>onStart</samp> callback function which is triggered just before the items start scrolling. This happens between <samp>onBeforeSeek</samp> and <samp>onBeforeSeek</samp> events. All API methods rely on the fact that the scollable is already on its target position. By returning <samp>false</samp> inside this function you can prevent the disabling of the navigational elements.
		</li>
		<li>
			Ability to change the speed inside <samp>onBeforeSeek</samp> event. Thanks <a href="http://flowplayer.org${jqt}/forum/35/27451">blacktrash</a></li>
		<li>index argument is supplied for the callback functions that are given to seeking functions as an argument</li>
		<li>
			next and nextPage buttons are now disabled when item count is less than the scrollable size
			thanks <a href="http://flowplayer.org${jqt}/forum/35/27359">sb3den</a></li>
	</ul>

	<h4>navigator plugin</h4>

	<ul>
		<li>
			new configuration variable <samp>idPrefix</samp> which generates ID- attribute for each item so that they can be uniquely styled with CSS. For example value "foo" generated ID:s "foo0", "foo1", "foo2" and so on. </li>
		<li>
			active class is assigned upon the new <samp>onStart</samp> event so that the navigator behaviour is more visually  pleasing
		</li>
	</ul>

	<h3>1.1.1. <em>September 17 / 2009</em></h3>

	<ul>
		<li>fixed a bug where the <samp>reload()</samp> call broke an existing keyboard navigation feature</li>

		<li>added the <samp>getClickIndex()</samp> method to the API</li>
		<li>fixed a bug where the <samp>onBeforeSeek</samp> and <samp>onSeek</samp> callbacks were called although the seeking position did not change. this won't happen anymore.</li>
		<li>brought back the <samp>loop</samp> variable</li>
	</ul>

	<h3>1.1.0. <em> September 11 / 2009</em></h3>

	<ul>
		<li>possible to seek with zero (0) speed	 </li>
		<li>possibility to scroll with one sized scrollable by clicking. the direction changes whe beginning or end is reached or navigational buttons are used in which case the scrolling goes to the same direction as the latest seek. </li>
		<li>new method <samp>getNaviButtons</samp>	</li>
		<li>new event: <samp>onReload</samp>  </li>
		<li>navigational elements can be placed anywhere on the page. If you have multiple scrollables on your page you should read about <a href="${jqt}/scrollable/index.html#multiple">multiple scrollables with navigational element</a>
		</li>
		<li>keyboard arrow keys now advance the same amount as the page size. can be changed with a new configuration option: <samp>keyboardSteps</samp> </li>
		<li>keyboard functionality can now be dynamically disabled/enabled by setting <samp>getConf().keyboard</samp> flag and calling <samp>reload()</samp> after that. See this <a href="http://flowplayer.org/forum/3/23142#post-23163">forum thread</a> for details.</li>
		<li>fixed a bug where you could not seek to an item who's index is higher than the index of the first item of the last page. this caused a quite lengthy discussion found <a href="http://flowplayer.org/forum/20/22384">here</a></li>
		<li>new "item" configuration property that lets you filter only some of the child elements as scrollable items </li>
		<li>if <samp>clickable</samp> property is enabled then <samp>A</samp>- tags inside scrollable won't scroll forward	</li>
		<li>
			new <samp>keyboard: 'static'</samp> configuration option makes the scrollable instance always controllable by the keyboard arrow keys. The scrollable does not have to be actively used.
		</li>
		<li>
			new <samp>focus()</samp> method: after this call the keyboard arrow keys will control this particular scrollable instance. You can take a look at <a href="${jqt}/demos/scrollable/site-navigation.html">A complete scrollable navigational system</a> demo which takes advantage of the "static" value and the <samp>focus()</samp> method.
		</li>
		<li>
			<samp>onSeek</samp> callback method is truly triggered *after* the scrolling animation.
		</li>
	</ul>

	<h4>New plugins for Scrollable</h4>

	<ul>
		<li><a href="http://flowplayer.org${jqt}/scrollable/index.html#circular">circular 1.0.0</a> </li>
		<li><a href="http://flowplayer.org${jqt}/scrollable/index.html#autoscroll">autoscroll 1.0.0</a></li>
		<li><a href="http://flowplayer.org${jqt}/scrollable/index.html#navigator">navigator 1.0.0</a>		</li>
		<li><a href="http://flowplayer.org${jqt}/scrollable/index.html#mousewheel">mousewheel 1.0.0</a></li>
	</ul>

	<p>
		mousewheel plugin is based on Three Dub Media's <a href="http://plugins.jquery.com/project/wheel" class="external">wheel plugin</a> which is a smaller, simplified interpretation of Brandon Aaron's special event "Mouse Wheel Extension"
	</p>

	<h3>1.0.5 <em> June 12 / 2009</em></h3>

	<ul>
		<li>
			Using a zero (<samp>0</samp>) on the scrolling animation caused to use the default speed (400ms). Now zero speed is possible.
		</li>
		<li>
			When autoScroll was enabled and it was programmatically paused this caused multiple timers to be created. this was spotted in <a href="http://www.flowplayer.org/forum/20/20923">this thread</a>. Autoscroll is now concidered as a depcreated feature and it will be replaced by an "autoscroll plguin" for scrollable scrollable 1.2.
		</li>
	</ul>

	<h3>1.0.4 <em> June 08 / 2009</em></h3>

	<ul>
		<li>Updated the graphics package. <a href="${jqt}/demos/scrollable/vertical.htm">vertical scrollable</a> has a new "skin"</li>
		<li>
			Fixed a bug where the Alt-left and Alt-right browser keystrokes fails to navigate backwards and forwards between pages. Now when the Alt or Control keys are pressed, the arrow keypresses are ignored. See details from this <a href="http://flowplayer.org/forum/20/20384">forum thread</a>.
		</li>
	</ul>

	<h3>1.0.3 <em> June 03 / 2009</em></h3>

	<ul>
		<li>This tool is now part of the <strong>jQuery Tools</strong> UI library and its prefix was changed from <samp>jquery.scrollable</samp> to <samp>tools.scrollable</samp></li>
		<li>All changes that are <a href="#tools">common to each tool</a></li>
		<li>Navigational elements can be other than siblings. The problem was spotted from this <a href="http://flowplayer.org/forum/8/18620">forum thread</a>.</li>
		<li>Support for varying width items in scrollable. Thanks to "rpitting" who posted <a href="http://flowplayer.org/forum/8/15544">a solution</a> </li>
		<li>Next and prev actions now work on <a href="${jqt}/demos/scrollable/vertical.htm?size=2">two sized scrollables</a></li>
		<li>Automatic scrolling can be stopped at runtime by calling: getConf().interval = 0. See this <a href="http://flowplayer.org/forum/8/14620">forum thread</a>.</li>
		<li>Clicking on the last items was working inconsistently. Thanks to "xeshm" who suggested <a href="http://flowplayer.org/forum/8/16894">a solution</a>.</li>
		<li>The arrow keys are now working in IE and Chrome</li>
	</ul>


	<h3>1.0.2 <em>Feb 24, 2009</em></h3>

	<ul>
		<li>
			Fixed a minor bug where <samp>getIndex()</samp> API call method returned the index position that was present <em>before</em> seeking occurred
		</li>
		<li>
			Updated <a href="${jqt}/demos/scrollable/autoscroll.html">autoscroll demo</a> to have custom animation when seeking occurs. Now we have an example of scrollable using callback methods.
		</li>
	</ul>

	<h3>1.0.1 <em>Jan 26, 2009</em></h3>

	<ul>
		<li>getItems() did not return correct items after new items has being added / removed</li>
		<li>mousewheel works similarly in Opera too</li>
		<li>checked and tested that everything works good with jquery 1.3.1</li>
		<li>getVersion() returns an array [1, 0, 1] instead of string "1.0.1"</li>
	</ul>


	<h3>1.0.0 <em>Jan 21, 2009</em></h3>

	<ul>
		<li>now it's possible to add/remove items from scrollable using standard jQuery methods. <a href="${jqt}/demos/scrollable/edit.html">see demo</a></li>
		<li>automatic action generation for "next page" and "prev page". <a href="${jqt}/demos/scrollable/navigation.html#pagescroll">see demo</a> </li>
		<li>interval option to automatically step through elements in specified intervals. <a href="${jqt}/demos/scrollable/autoscroll.html">see demo</a>  </li>
		<li>next/prev links can now be hidden (or styled) when they are not active using <samp>disabledClass</samp> configuration option </li>
		<li><samp>hoverClass</samp> for styling elements upon mouseover event</li>
		<li>new event handler <samp>onBeforeSeek</samp> which is triggered before seeking occurs. returning false here cancels seeking</li>
		<li>a whole new <a href="${jqt}/scrollable/index.html#api">API</a> for interacting with scrollable. </li>
		<li><samp>getConf()</samp> method that you can read <em>and modify</em> for making the tool behave differently at runtime</li>
		<li><samp>easing</samp> configuration option for changing how scrolling animation behaves. two options "swing" and "linear"	</li>
		<li>all seeking funktions in an api accept optional callback function that is triggered when seeking finished. this happens after <samp>onBeforeSeek</samp> and before <samp>onSeek</samp> events.</li>
		<li><samp>keyboard</samp> option to enable/disable navigation with arrow keys</li>
		<li>error handling on callback functions</li>
		<li><samp>alert</samp> configuration option to enable/disable alert boxes when you have erroneous code in your callbacks</li>
		<li>removed the auto generated wrapper element <samp>DIV.__scrollable</samp> so that there are no undocumented surprises</li>
		<li>better code structure (public methods, private members, source code is easy to understand)</li>
	</ul>

	<h3>0.13 <em>Nov 5</em></h3>

	<ul>
		<li>
			automatically generated after scrolling elements. makes things work better and less CSS hacking needed.
		</li>
		<li>seekTo() couldn't reach last element. now it can</li>
	</ul>

	<h3>0.12 <em>Oct 31, 2008</em></h3>

	<ul>
		<li>nextPage, prevPage not working</li>
		<li>fixed bug in onSeek this variable which now points to the <samp>status</samp> object</li>
		<li>much better code structure</li>
		<li>passes jslint </li>
		<li>clickable option</li>
		<li>fixed missing keyboard actions</li>
		<li>better API. "unified" api is now deprecated</li>
		<li>next, prev, nextPage, prevPage now stops correctly</li>
		<li>loop mode, default false</li>
		<li>navigator tries first to find first A tags</li>
	</ul>

	<h3>0.10 <em>May 28, 2008</em></h3>

	<p>
		Initial public release. Published to jQuery plugins repository.
	</p>
</div>

<!--}}}-->


<!--{{{ overlay -->

<a name="overlay"></a>
<div class="pane" id="overlay">

	<h3 class="first">1.1.2. <em>October 08 / 2009</em></h3>

	<ul>
		<li>if overlayed element is not found a proper error message is thrown: <em>"Could not find Overlay: #my-overlay2"</em></li>
		<li>better error message upon unexistent effect: <em>'Overlay: cannot find effect : "apple"</em></li>
		<li>
			new <samp>onStart</samp> callback which is triggered just before the overlay starts appearing in an animated way. This happens between <samp>onBeforeLoad</samp> and <samp>onLoad</samp> events. The overlay has already been positioned to the place where it start's animating. This callback is not triggered if the loading action has been cancelled in <samp>onBeforeLoad</samp>.
		</li>
	</ul>

	<h3>1.1.1. <em>September 17 / 2009</em></h3>

	<ul>
		<li>brought back the support for <samp>top: 'center'</samp></li>
		<li>fixed a bug where the file input field was disabled when an overlay was being loaded programmatically. thanks <a href="http://flowplayer.org/forum/8/27115">ncooley</a></li>
		<li>fixed a bug when an overlay &amp; expose were closed and the expose effect disappeared while the overlay stayed open. thanks <a href="http://flowplayer.org${jqt}/forum/55/27292">Glazz</a></li>
		<li>ability to close the overlay immediately after being opened. The <samp>onLoad</samp> event is not fired unless the overlay is truly opened.</li>
	</ul>

	<h3>1.1.0. <em> September 11 / 2009</em></h3>

	<ul>
		<li>A whole new <a href="http://flowplayer.org${jqt}/overlay/index.html#effects">effect framework</a> with two effects "default" and "apple"</li>
    <li>the Apple effect has to be included separately before it can be used.</li>
		<li>New effects can be added with <samp>$.tools.overlay.addEffect</samp> method.</li>
		<li>ability to assign overlay function for elements that are added on the page dynamically.</li>
		<li><samp>document.click</samp> is unbind when there is no overlay available</li>
		<li>escape button is not tracked when there is no overlay available</li>
		<li>removed non-standard "overlay" attribute from the overlayed element</li>
		<li>new method: <samp>getClosers()</samp> which returns all the elements that inside overlay that closes it</li>
		<li><samp>getBackgroundImage()</samp> method is removed (because it was Apple effect specific)</li>
		<li>new property: <samp>closeOnEsc</samp> that can be used to disable overlay closing with ESC key</li>
		<li>fixed a bug when multiple triggers target the same overlay: thanks @adamlogic in Twitter</li>
		<li>
			overlays can now trigger additional overlays (with different effects, expose settings, etc). here is a demo about an <a href="http://flowplayer.org${jqt}/demos/test/overlay-from-overlay.htm">overlay opening another overlay</a>.
		</li>
		<li><samp>finish</samp> configuration object has now been moved to configuration's root level. this may break old installations.</li>
		<li><samp>getOverlay()</samp> method. The previous <samp>getContent()</samp> method is now deprecated and will be removed in Tools 1.2.0.</li>
		<li>when <samp>closeOnClick</samp> and <samp>closeOnEsc</samp> properties are used together with the <samp>mask</samp> effect then those properties are populated to the Expose tool as well</li>
		<li>If you supply a value to the <samp>close</samp> property, the overlay does not auto-generate a close button</li>
		<li>
			<samp>top</samp> configuration variable now accepts percentage values so that it works better in different kind of screen resolitions. By default this is 10%
		</li>
	</ul>

	<h3>1.0.4 <em> June 12 / 2009</em></h3>

	<ul>
		<li>
			When being used with expose property the close action sometimes fails. now it's fixed
		</li>
	</ul>

	<h3>1.0.3 <em> June 08 / 2009</em></h3>

	<p>
		The load method can now be called upon <samp>$(document).ready()</samp>. See the details in this <a href="http://flowplayer.org/forum/20/20284">forum thread</a>.
	</p>

	<h3>1.0.2 <em> June 03 / 2009</em></h3>

	<ul>
		<li>This tool is now part of the <strong>jQuery Tools</strong> UI library and prefix was changed from <samp>jquery.overlay</samp> to <samp>tools.overlay</samp></li>
		<li>All changes that are <a href="#tools">common to each tool</a></li>
		<li>When overlay is closed the animation shrinks visually towards the trigger element</li>
		<li><samp>mask</samp> configuration variable for easy configuration of the exposing effect</li>
		<li>Fixed a bug where in some versions of Opera overlay was positioned out of the screen</li>
		<li>The <samp>expose()</samp> method has been removed; it was previously deprecated</li>
		<li>There is now a <samp>closeSpeed</samp> flag that you can use to tweak the closing animation time</li>
		<li>The <samp>onClose</samp> callback event was totally missing</li>
		<li>The escape button was not working properly in IE.</li>
		<li>Some areas on the overlayed element caused the overlay to close when clicked on IE</li>
		<li>overlay now works with jQuery 1.2.x &amp; Safari. Look at this <a href="http://static.flowplayer.org/forum/8/17657">forum thread</a>.</li>
		<li>When overlay is opened, the default finish top position is now 100px from the top edge instead of being vertically centered. this improves the readability.</li>
	</ul>

	<h3>1.0.1 <em>Feb 16 2009</em></h3>

	<ul>
		<li>fixed a bug where overlay did not work when there was multiple triggers for same overlay</li>
		<li>does not alert when background image is missing - makes a throw statement instead</li>
	</ul>

	<h3>1.0.0 <em>Feb 16 2009</em></h3>


	<ul>
		<li>ability to place <a href="${jqt}/demos/overlay/multiple.html">multiple simultaneous overlays</a> on the same page</li>
		<li>toally new <a href="${jqt}/overlay/index.html#api">JavaScript API</a></li>
		<li>ability to trigger overlay programmatically</li>
		<li>ability to define where growing animation starts and/or ends</li>
		<li>exeptions are caught on user defined callback functions</li>
		<li>overlay's background images are preloaded into browsers cache by default. can be disabled from configuration</li>
		<li>each callback now receives this API as their this- variable (as proper programs should). <strong>note</strong> this may break your previous installation.</li>
		<li>much cleaner source code. easier to understand for newcomers</li>
		<li>a new <a href="${jqt}/demos/overlay">overlay demo section</a></li>
	</ul>


	<h3>0.14 <em>Nov 6</em></h3>

	<p>
		Fixed a bug that caused Opera not to show background images.
	</p>

	<h3>0.13 <em>Nov 5</em></h3>

	<ul>
		<li>new callback function: <samp>onBeforeLoad</samp>. allows you to cancel loading when false is returned</li>
		<li>
			changed existing callback names to something more descriptive: now they are <samp>onLoad</samp> and <samp>onClose</samp>
		</li>
		<li>
			made overlay work so that it can work in co-operation with <samp>mask</samp> tool. example of such co-operation can be found <a href="/demos/overlay.htm">here</a>.
		</li>
	</ul>


	<h3>0.12 <em>Oct 31, 2008</em></h3>

	<ul>
		<li>click outside overlay closes it</li>
		<li>closeOnClick configuration option, by default this is <samp>true</samp></li>
	</ul>
</div>

<!--}}}-->


<!--{{{ expose -->

<a name="expose"></a>
<div class="pane" id="expose">

	<h3 class="first">1.0.5. <em>October 08 / 2009</em></h3>

	<ul>
		<li>Optional event object can be given as argument to load(), close() functions and it will be handled to the callback functions. A convenient way to pass data for the callbacks.	</li>
	</ul>

	<h3>1.0.4. <em> September 11 / 2009</em></h3>

	<ul>
		<li>
			A complex function for calculating the mask size properly for every browser / version combination is (hopefully) completed. There are many complexities that are mainly involved with the fact that is the scrollbar visible or not. IE is of course the hardest to get in shape. Again <a href="http://www.bringdownie6.com/" class="external">It's time to Unite</a>.
		</li>
		<li>
			A new method <samp>fit()</samp> which will resize the mask to fill the whole space. This is needed if you grow the document size yourself. Look at <a href="http://flowplayer.org${jqt}/demos/expose/styling.html">this demo</a> for an example of this method.
		</li>
		<li>
			if overlayed elements have originally larger zIndex than the expose mask it is being used
		</li>
	</ul>

	<h3>1.0.3 <em> June 12 / 2009</em></h3>

	<ul>
		<li>
			Now works with elements whose position is static (fixed), <a href="http://flowplayer.org/forum/20/20627">see forum post</a>.
		</li>
	</ul>

	<h3>1.0.2 <em> June 03 / 2009</em></h3>

	<ul>
		<li>this tool is now part of the <strong>jQuery Tools</strong> UI library and prefix was changed from <samp>jquery.expose</samp> to <samp>tools.expose</samp></li>
		<li>All changes that are <a href="#tools">common to each tool</a></li>
		<li>the biggest rewrite for the tools. most notably this tool is not a "singleton" anymore - meaning that you can now initialize multiple exposes on the page with different settings and load/close their exposing state separately. this is on the same line with the functionality with other tools.</li>
		<li>different mask settings are possible for different elements</li>
		<li>lazy loading of the effect. you now initialize the expose beforehand and later call <samp>load</samp></li>
		<li>takes all the available room on the browser window (no inconsistency on browsers)</li>
		<li>no additional scrollbars available when exposing effect is in place</li>
		<li>if window is resized the mask size is adjusted accordingly: look for following <a href="http://flowplayer.org/forum/8/13938">forum thread</a>.</li>
		<li>in this version the <samp>maskId</samp> variable is null by default. this may break other installations if they have tweaked the <samp>#exposeMask</samp> element with custom CSS settings. this can be fixed by setting <samp>maskId</samp> back to "exposeMask". </li>
		<li>new default color for the mask: #456 </li>
		<li><samp>closeOnEsc</samp> configuration variable</li>
	</ul>

	<h4>Changes to old installations</h4>

	<p>
		This release will break old installations. Here is how things were configured in previous version.
	</p>

	<pii:code>
	// expose elements
	$("div.myElements").expose();

	// close exposing
	$.exopse.close();
	</pii:code>

	<p>
		In this version the same thing is achieved in following manner
	</p>

	<pii:code>
	// expose elements
	var api = $("div.myElements").expose({api: true}).load();

	// close exposing
	api.close();
	</pii:code>

	<p>
		This is because now there can be multiple exposes on the page simultaneously and the behaviour is on the line with other tools. If you are exposing overlays you can now use the <samp>mask</samp> <a href="overlay/index.html#configuration">configuration variable</a> which will make your life much easier.
	</p>


	<h3>1.0.1 <em>Apr 15 2009</em></h3>

	<p>
		Z-index was not restored to their original value when exposing was closed.
	</p>

	<h3>1.0.0 <em>Feb 16 2009</em></h3>

	<ul>
		<li>totally rewritten source code and a new <a href="${jqt}/toolbox/expose.html#api">JavaScript API</a></li>
		<li>ability to trigger expose programmatically</li>
		<li>new callback functions: <samp>onBeforeLoad</samp>, <samp>onLoad</samp> abd <samp>onBeforeClose</samp></li>
		<li>inside every callback function <samp>this</samp>- varialbe is a pointer to the API</li>
		<li><samp>$.expose</samp> is a pointer to the currently or previously active expose API</li>
		<li>new configuration options: <samp>maskId, zIndex, loadSpeed, closeSpeed</samp> and <samp>alert</samp></li>
		<li>a new <a href="${jqt}/demos/expose">expose demo section</a></li>
	</ul>


	<h3>0.13 <em>Nov 5</em></h3>

	<ul>
		<li><samp>onBlur</samp> name changed to <samp>onClose</samp> - consistent with other tools</li>
		<li>
			made expose work so that it can work in co-operation with <samp>overlay</samp> tool. example of such co-operation can be found <a href="/demos/overlay.htm">here</a>.
		</li>
		<li>absolutely positioned elements were re-positioned relatively. this no longer happens.</li>
	</ul>

	<h3>0.12 <em>Oct 31, 2008</em></h3>

	<ul>
		<li>unexpose function</li>
		<li>onBlur option</li>
	</ul>
</div>

<!--}}}-->


<!--{{{ tabs -->

<a name="tabs"></a>
<div class="pane" id="tabs">

	<h3 class="first">1.0.4. <em>October 08 / 2009</em></h3>

	<ul>
		<li>
			only performs an initial <samp>click()</samp> call when <samp>initialIndex</samp> is a positive number. possibility to initialize tabs so that all tabs are hidden
		</li>
		<li>
			fixed a bug where <samp>getCurrentPane()</samp> did not return anything althought a proper <samp>initialIndex</samp> was specified.
		</li>
	</ul>

	<h3>1.0.3. <em>September 17 / 2009</em></h3>

	<ul>
		<li>
			panes can be specified as a jQuery object. See this <a href="http://flowplayer.org${jqt}/forum/25/26677">forum thread</a>.</li>
		<li><strong>tabs.history</strong> now works with the tabs <samp>initialIndex</samp> option</li>
		<li><strong>tabs.slideshow</strong> now stops working after the first iteration when <samp>autoplay</samp> is enabled</li>
		<li><strong>tabs.slideshow</strong> added the <samp>onBeforePlay</samp>, <samp>onPlay</samp>, <samp>onBeforePause</samp>, <samp>onPause</samp> events</li>
		<li>
			<strong>tabs.history</strong> no more error messages on IE6 when being used together with the HTTPS protocol. See this <a href="http://flowplayer.org${jqt}/forum/25/26592">forum thread</a></li>
		<li>
	</li>

	<h3 class="first">1.0.2. <em> September 11 / 2009</em></h3>

	<ul>
		<li>new built-in effect: "ajax" </li>
		<li>a new configuration property <samp>fadeOutSpeed</samp> for the "fade" effect for performing "crossfades"</li>
		<li>new <samp>rotate</samp> configuration property for cycling through the tabs in a circular manner</li>
		<li>
			<samp>history</samp> option is now implemented as a plugin. It has changed to <samp>$("..").tabs().history();</samp>. This new plugin handles history even better. No more unnessessary IFRAME hacks for IE8.
		</li>
		<li><samp>$.tools.addTabEffect()</samp> is no longer used for adding new custom effects. Use <samp>$.tools.tabs.addEffect()</samp> instead</li>
		<li>fixed a bug where the last tab was opened if there was an unidentified hash value on the URL</li>
		<li>
			<samp>onClick</samp> event is called after the effect has *really* finished its job. If the effect has animations the event is called <em>after</em> the animation has been finished. If you have made your own effects for tabs the implementation has <a href="tabs/index.html#effects">changed a bit</a>. Look for the <samp>done</samp> argument.
		</li>
		<li>
			The ability to instantiate multiple tabs or accordions <a href="${jqt}/demos/tabs/multiple.html">with a single call</a>
		</li>
	</ul>

	<h4>New plugins for Tabs</h4>

	<ul>
		<li>
			<a href="http://flowplayer.org${jqt}/tabs/index.html#history">history 1.0.0</a>. A much more stable implementation than the previous <samp>history</samp> flag. Works better with IE.
		</li>

		<li><a href="http://flowplayer.org${jqt}/tabs/index.html#slideshow">slideshow 1.0.0</a></li>
	</ul>

	<h3>1.0.1 <em> June 12 / 2009</em></h3>

	<ul>
		<li>
			Now works with elements whose position is static (fixed), <a href="http://flowplayer.org/forum/20/20627">see forum post</a>.
		</li>
	</ul>

	<h3>1.0.0 <em> June 03 / 2009</em></h3>

	<p>
		Initial release. This tool is now part of the <strong>jQuery Tools</strong> UI library. Published to jQuery plugins repository. Look for the <a href="${jqt}/tabs/index.html">tabs documentation</a> for the features.
	</p>

</div>

<!--}}}-->


<!--{{{ tooltip -->

<a name="tooltip"></a>
<div class="pane" id="tooltip">

	<h3 class="first">1.1.2. <em>Oct 08 / 2009</em></h3>

	<ul>
		<li>
			you can specify whether the tooltip closes upon <samp>mouseout</samp> or not. In fact you can configure the opening and closing event for the tooltip element. this happens with the new <samp>effects.tooltip</samp> configuration option.
		</li>
		<li>
			tooltip works flawlessly with animated effects when being quickly moved from trigger to another. this was especially present in the <a href="http://flowplayer.org${jqt}/demos/tooltip/form.html">form demo</a> which now works smoothly.
		</li>
		<li>
			fixed "black box" PNG bug in toggle effect for Internet Explorer
		</li>
		<li>
			fixed a bug where <samp>this.getTrigger()</samp> may return a the tooltip element inside callbacks when the tooltip was being hidden by moving the mouse out of the tooltip.
		</li>
		<li>
			when an effect is not found a proper error message is thrown: <em>Nonexistent effect "myeffect"</em>
		</li>
	</ul>

	<h3>1.1.1. <em>September 17 / 2009</em></h3>

	<ul>
		<li>
			<strong>tooltip</strong> ability to change the tooltip dynamically by setting: <samp>trigger.data("title", title)</samp>. See this <a href="http://flowplayer.org${jqt}/forum/30/26527">forum thread</a>
		</li>
		<li>
			<strong>tooltip</strong> by default the tooltip position is now determined by using the <samp>offset()</samp> method of jQuery. This gives better results when the trigger is positioned inside relatively or absolutely positioned elements. See <a href="http://flowplayer.org${jqt}/forum/30/26424">this</a> and <a href="http://flowplayer.org/forum/users/15251">this</a> forum threads. Thanks "bericum".
		</li>
		<li>
			<strong>tooltip</strong> the <samp>relative</samp> configuration property can be used to switch between positioning schemes. Using <samp>false</samp> positions the tooltip relative to the document and using <samp>true</samp> positions the tooltip relative to the parent element. you should rarely need to touch this property.
		</li>
		<li>
			<strong>tooltip</strong> when calling the <samp>hide</samp> API method the <samp>delay</samp> configuration variable is ignored and the tip will be hidden immediately. thanks <a href="http://flowplayer.org${jqt}/forum/30/27002">Aramaki</a>.
		</li>
	</ul>

	<h3>1.1.0. <em> September 11 / 2009</em></h3>

	<ul>
		<li>If opacity is set to 1 it is not set at all. This caused "black box" problems in IE</li>
		<li>new <samp>lazy</samp> configuration variable which will make the pages load faster when there are many tooltips. This is enabled by default when there is more than 20 tooltips on the page. For the record, 21 triggers this will cause 2336 calls and takes 169.144ms with fast computers.	</li>
		<li>trigger's <samp>title</samp> attribute can be used as the tooltip. This requires that the <samp>tip</samp> configuration variable is given. </li>
		<li><samp>onBeforeShow</samp> is now fed with position argument this usable for plugin developers	</li>
		<li>if <samp>delay</samp> is set to 0 it is now truly 0 (as opposed to a 1 millisecond setTimeout call);</li>
		<li>new configuration option: <samp>predelay</samp> for enabling delays <em>before</em> the tooltip is shown</li>
		<li>new effects are no longer added with <samp>$.tools.addTipEffect()</samp> but with <samp>$.tools.tooltip.addEffect()</samp> instead</li>
		<li>a much simpler syntax for the <samp>position</samp> parameter. It can now be given as a string such as <samp>"top center"</samp>. The old syntax, <samp>['top', 'center']</samp>, is still supported </li>
		<li><samp>onHide</samp> and <samp>onShow</samp> events are now called as the very last event after the possible animation </li>
		<li>default effect "slideup" is now replaced with a highly configurable "slide" effect</li>
		<li>new configuration properties for the "slide" effect: <samp>direction</samp> specifies the sliding direction and <samp>bounce</samp> specifies whether the sliding comes back to the opposite direction from the original direction.</li>
		<li>new <samp>cancelDefault</samp> configuration property for removing the browser's default tooltip. The original <samp>title</samp> attribute can still be retrieved with <samp>trigger.data("title")</samp></li>
		<li>when tooltip is used together with form fields the tooltip will not be hidden when mouse leaves it</li>
		<li>
			A completely new <a href="${jqt}/tooltip/index.html#events">event management system</a> where you can fully control <em>when</em> the tooltip will be shown or hidden. Thanks to forum posts: <a href="http://flowplayer.org/forum/20/24023">this</a> and <a href="http://flowplayer.org/forum/20/23020">this</a> for the idea.
		</li>
	</ul>

	<h4>Dynamic plugin 1.0.0</h4>

	<p>
		A new Tooltip plugin for automatically repositioing the tooltip based on the document's scrolling position. The tooltip will always stay visible. See the details of <a href="http://flowplayer.org${jqt}/tooltip/index.html#dynamic">here</a>.
	</p>

	<h3>1.0.2 <em> June 12 / 2009</em></h3>

	<ul>
		<li>
			fixed a bug where trigger could change when it had child elements - such as table. see <a href="http://flowplayer.org/forum/20/20772">forum thread</a>
		</li>
		<li>
			tooltip now closes when mouse leaves the tip while it's still being animated. see <a href="http://flowplayer.org/forum/20/20635#post-20793">forum thread</a>
		</li>
		<li>
			new built-in effect: "fade" with two configuration variables: <samp>fadeInSpeed</samp>, <samp>fadeOutSpeed</samp>.
		</li>
	</ul>

	<h3>1.0.1 <em> June 08 / 2009</em></h3>

	<ul>
		<li>
			Tooltip is initialized differently. Instead of selecting the tooltip we are selecting the triggering element. Look for <a href="${jqt}/demos/tooltip/index.html">minimal setup for tooltip</a> for the details.
		</li>
		<li>
			tooltips now work correclty on textareas. see details from this <a href="http://flowplayer.org/forum/20/20480">forum thread</a>.
		</li>
		<li>
			tooltip can be positioned next to the trigger element's parent too. this is sometimes needed in forms for example. the input is nested inside a <samp>label</samp> element and the tooltip is placed next to the label. See details from this <a href="http://flowplayer.org/forum/20/20510">forum thread</a>.
		</li>
	</ul>


	<h3>1.0.0 <em> June 03 / 2009</em></h3>

	<p>
		Initial release. This tool is now part of the <strong>jQuery Tools</strong> UI library. Published to jQuery plugins repository. Look for the <a href="tooltip/index.html">tooltip documentation</a> for the features.
	</p>

</div>

<!--}}}-->


<!--{{{ flashembed -->

<a name="flashembed"></a>
<div class="pane" id="flashembed">

	<h3 class="first">1.0.4. <em> Setptember 11 / 2009</em></h3>

	<p>
		New configuration property <samp>cachebusting</samp> which will force the SWF file to be loaded from the cache no matter what the expiry headers are. This is achieved by appending a random query string variable on the request URL. This property is <samp>false</samp> by default. Thanks to the following <a href="http://flowplayer.org/forum/20/21090#post-21999">forum thread</a>.
	</p>

	<h3>1.0.3 <em> June 03 / 2009</em></h3>

	<ul>
		<li>
			the file is now renamed from <samp>flashembed</samp> to <samp>tools.flashembed</samp>. however this tool is not part of the official jQuery Tools library but can be bundled inside a <a href="/download/index.html#combine">custom tool combination</a>
		</li>
		<li>
			does not support all <a href="#tools">common tool features</a>. only <samp>api</samp> configuration variable support was added.
		</li>
		<li>
			fixed a bug where a link to Flash download page was not working when the container element was also a link (anchor tag). this only occurred for users with IE and without any Flash installation.
		</li>
	</ul>

	<h3>1.0.2 <em>Apr 15 2009</em></h3>

	<p>
		On some occasions IE will not load the player from the memory. A random query string is automatically added after the SWF url to prevent this from happeing.
	</p>

	<h3>1.0.1 <em>February 24, 2009</em></h3>

	<p>
	Fixed a bug on IE when embedding is done inside the <samp>A</samp> tag and an unsupported Flash version was detected. It seems that IE will throw a JavaScript error when additional A tag is placed inside existing A tag by scripting.
	</p>

	<h3>1.0.0 <em>February 4, 2009</em></h3>

	<p>
		This version can now be used to embed all kinds of Flash objects and some problems encountered on the previous release has been resolved.
	</p>

	<p>
		A large collection of <a href="${jqt}/demos/flashembed/index.html">flashembed demos</a> showing you the flexibility of this tool. demos include: basics, jquery usage, handling old versions, layering HTML on top of Flash.
	</p>

	<p>
		flashembed generates standards-based <samp>OBJECT</samp> tag and <samp>EMBED</samp> tag is now history. <a href="${jqt}/flashembed.html#html">more information</a>
	</p>


	<h3>0.34 <em>Nov 20, 2008</em></h3>

	<ul>
		<li>new static functions: asString, getHTML, and getFullHTML</li>
		<li>dual lisencing under MIT and GPL 3.0</li>
	</ul>


	<h3>0.33 <em>Oct 31, 2008</em></h3>

	<ul>
		<li>Values such as "50%" are supplied to Flash as "50pct". This is because Flash cannot handle %- mark correclty</li>
		<li>much, much better code structure</li>
		<li>new static function flashembed.domReady (uses jQuery method if nessessary)</li>
	</ul>

	<h3>0.31 <em>July 220, 2008</em></h3>

	<ul>
		<li>flashembed() can insert flash into page even thougt DOM has not been loaded yet. it incorporates an internal DOM checking utility. this way nested OBJECT's API is not returned and so it's designed to be used in simple embedding.</li>
		<li>Fixed a bug on Safari when no flashvars was given.</li>
		<li>Fixed a bug on IE where an id is required for object tag in order to access its public API.</li>
		<li>Lazy Loading was totally removed from this release - it is no longer marked as deprecated.</li>
	</ul>

	<h3>0.29 <em>June 10, 2008</em></h3>

	<ul>
		<li>source code now passes JSLint: http://www.jslint.com</li>
		<li>updated documentation. it should be now (even) more readable</li>
		<li>packed, minified and gzipped versions are now available</li>
		<li>second argument can be passed as string when it is itepreted as "src" option. this makes the tool more readable</li>
		<li>lazy loading was removed because it should be implemetned outside this tool for making more modularized code </li>
	</ul>

	<h3>0.27 <em>May 28, 2008</em></h3>

	<ul>
		<li>Fixes a minor bug that occurred with Flash 10 beta.</li>
	</ul>

	<h3>0.26 <em>Apr 12, 2008</em></h3>

	<ul>
		<li>
			Added new flexible API access. After you have placed your Flash object to the page you'll instantly have the handle to the Flash object's programming interface (API) if such is profided.
		</li>
		<li>Fixed a bug that occurred in IE 7 / XP</li>
	</ul>


	<h3>0.25 <em>Apr 1, 2008</em></h3>

	<ul>
		<li>Lazy loading - so that your flash objects won't be loaded until certain event, usually click event</li>
		<li>jQuery dependency is removed because this project is used in many different settings. of course jQuery is still strongly supported due to its excellent selector syntax</li>
		<li>Alternate content via custom function</li>
	</ul>

	<h3>0.10 <em>Mar 11, 2008</em></h3>

	<p>
		Initial public release. Posted on jQuery repository. A glory has begun.
	</p>
</div>

<!--}}}-->


